{"version":3,"file":"static/js/535.f44735cb.chunk.js","mappings":"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","sources":["components/LoginForm/fields.jsx","components/LoginForm/initialState.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx","shared/components/Button.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","shared/components/InputField.jsx","../node_modules/nanoid/index.browser.js","shared/hooks/useForm.jsx"],"sourcesContent":["const fields = {\n    email: {\n      type: 'text',\n      name: 'email',\n      required: true,\n      label: 'User email',\n    },\n    password: {\n      type: 'password',\n      name: 'password',\n      required: true,\n      label: 'User password',\n    },\n  };\n  export default fields;","const initialState = {\n    email: '',\n    password: '',\n  };\n  export default initialState;","import InputField from '../../shared/components/InputField';\nimport useForm from '../../shared/hooks/useForm';\nimport Button from '../../shared/components/Button';\nimport fields from './fields';\nimport initialState from './initialState';\nimport PropTypes from 'prop-types';\nimport './LoginForm.css';\n\nconst LoginForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n  const { email, password } = state;\n  return (\n    <form className='loginform-form' onSubmit={handleSubmit}>\n      <InputField value={email} onChange={handleChange} {...fields.email} />\n      <InputField\n        value={password}\n        onChange={handleChange}\n        {...fields.password}\n      />\n      <Button>Login now</Button>\n    </form>\n  );\n};\nexport default LoginForm;\n\nLoginForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};","import LoginForm from '../components/LoginForm/LoginForm';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { isUserLogin } from '../Redux/auth/auth-selectors';\nimport { login } from '../Redux/auth/auth-operations';\nimport './LoginPage.css'\n\nconst LoginPage = () => {\n  const isLogin = useSelector(isUserLogin);\n  const dispatch = useDispatch();\n\n  const handleLogin = data => {\n    dispatch(login(data));\n  };\n\n  if (isLogin) {\n    return <Navigate to=\"/contacts\" />;\n  }\n  return (\n    <div>\n      <h1 className='title-page'>Login</h1>\n      <LoginForm onSubmit={handleLogin} />\n    </div>\n  );\n};\nexport default LoginPage;","import './Button.css'\n\nconst Button = ({ children, type = 'submit' }) => {\n  return (\n    <button className='btn' type={type}>\n      {children}\n    </button>\n  );\n};\nexport default Button;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\nimport './InputField.css'\n\nconst InputField = ({ label, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n  return (\n    <div className='inputfield-wrap'>\n      <label className='inputfield-label' htmlFor={id}>\n        {label}\n      </label>\n      <input className='inputfield-input' id={id} onChange={handleChange} {...props} />\n    </div>\n  );\n};\nexport default InputField;","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    setState(prevState => {\n      const { name, value, checked, type } = target;\n      const newValue = type === 'checkbox' ? checked : value;\n      return { ...prevState, [name]: newValue };\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(state);\n    setState(initialState);\n  };\n  return { state, setState, handleChange, handleSubmit };\n};\nexport default useForm;\n\nuseForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  initialState: PropTypes.element.isRequired,\n};"],"names":["email","type","name","required","label","password","onSubmit","useForm","initialState","state","handleChange","handleSubmit","className","InputField","value","onChange","fields","Button","isLogin","useSelector","isUserLogin","dispatch","useDispatch","to","data","login","children","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","props","id","useMemo","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","htmlFor","useState","setState","prevState","checked","newValue","e","preventDefault","propTypes","PropTypes"],"sourceRoot":""}